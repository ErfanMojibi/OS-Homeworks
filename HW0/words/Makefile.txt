ابتدا لازم است توضیح دهیم فایل‌های
make
به فرمت
[target] : dependencies
    system command
تعریف می‌شوند.
به صورت پیش‌فرض 
make
سراغ تارگت
all
می‌رود و ابتدا دیپندنسی‌های آنرا اجرا کرده
سپس کامندش را اجرا می‌کند.

حال در فایل مربوط به این مسئله،
در ابتدای فایل تعدادی متغییر تعریف شده است که در ادامه از آنها استفاده شود شامل
CC, CFLAGS, SOURCES, LIBRARIES, BINARIES.
متغیرهایی که در هنگام تعریف جلو آنها ؟ قرار دارد، یعنی اگر متغیر مذکور نال بود پر شود.
.DEAFULT_GOAL
مشخص می‌کند که دستور
make
به صورت پیش‌فرض تارگت
default 
را اجرا کند.
این دستور یک دیپندسی دارد و خودش دستورسی ندارد، پس با زدن 
make
دستور 
$(CC) $(CFLAGS) $(SOURCES) $(LIBRARIES) -o $(BINARIES)
اجرا می‌شود.

با زدن 
make clean
دستور
rm -f $(BINARIES)
اجرا خواهد شد.

اما مورد 
%: %.c
    $(CC) $(CFLAGS) $(LIBRARIES) -o $@ $^
یک
Rule
است که به این صورت کار می‌کند که 
make [file]
یک فایل
.c
با اسم
file
را با کامند داده شده کامپایل می‌کند و خروجی را برای ما تولید می‌کند.
لازم به ذکر است در کامند داده شده دو متغیر داریم که نشانگر موارد زیر است:
$@: target
$^: dependencies