1.
	movl	8(%ebp), %eax
	subl	$1, %eax
	subl	$12, %esp
	pushl	%eax
	call	recur
2.
objdump -s -j .text map.obj
.text:
map.obj:     file format elf32-i386

Contents of section .text:
 0000 8d4c2404 83e4f0ff 71fc5589 e5535183  .L$.....q.U..SQ.
 0010 ec10e8fc ffffff81 c3020000 00c745ec  ..............E.
 0020 00000000 83ec0c6a 64e8fcff ffff83c4  .......jd.......
 0030 108945f0 83ec0c6a 64e8fcff ffff83c4  ..E....jd.......
 0040 108945f4 83ec0c6a 03e8fcff ffff83c4  ..E....j........
 0050 10b80000 00008d65 f8595b5d 8d61fcc3  .......e.Y[].a..
این قسمت کد برنامه را شامل می‌شود.
----
objdump -s -j .data map.obj
.data:
map.obj:     file format elf32-i386

Contents of section .data:
 0000 07000000

این بخش شامل متغیر گلوبال از پیش تعریف شده است.
3.
objdump --syms map.obj
4
g: global
یعنی آن سیمبول یک نماد عمومی و گلوبال است.
O: Object
یعنی آن نماد یک آبجکت است.
*UND*: Undefined
یعنی به آن نماد در فایل فعلی رفرنس داشته‌ایم اما در اینجا تعریف نشده است.
5.

6.
در پرونده recurse.obj
recurse.obj:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*  00000000 recurse.c
00000000 l    d  .text  00000000 .text
00000000 l    d  .data  00000000 .data
00000000 l    d  .bss   00000000 .bss
00000000 l    d  .rodata        00000000 .rodata
00000000 l    d  .text.__x86.get_pc_thunk.ax    00000000 .text.__x86.get_pc_thunk.ax
00000000 l    d  .note.GNU-stack        00000000 .note.GNU-stack
00000000 l    d  .eh_frame      00000000 .eh_frame
00000000 l    d  .comment       00000000 .comment
00000000 l    d  .group 00000000 .group
00000000 g     F .text  00000052 recur
00000000 g     F .text.__x86.get_pc_thunk.ax    00000000 .hidden __x86.get_pc_thunk.ax
00000000         *UND*  00000000 _GLOBAL_OFFSET_TABLE_
00000000         *UND*  00000000 printf
7.
جدول نماد خروجی بزرگتر است و 
recur
که یک نماد 
UND
بود هم حالا شناخته شده است. 